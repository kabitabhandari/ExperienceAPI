buildscript {
	ext {
		springBootVersion = '3.1.2'
	}
}

plugins {
	id 'com.diffplug.spotless' version "6.19.0"
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.kbi'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}



dependencies {

	//Springboot Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// To make use of block() while calling reactive webclient endpoints. But calling block() is not a good practice.
	implementation 'org.springframework.boot:spring-boot-starter-web'


	// Swagger endpoints
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.10'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'


	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	// Provides JUnit, Mockito, MockWebServer
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.mockito:mockito-core'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testImplementation 'io.projectreactor:reactor-test'

}


tasks.named('test') {
	useJUnitPlatform()
}

/*Spotless Command:

./gradlew clean build spotlessApply OR  ./gradlew spotlessApply    - To implement automated code formatting
./gradlew clean build spotlessCheck OR  ./gradlew spotlessCheck  - To validate if code was formatted

*/

spotless{
	java {
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
		googleJavaFormat('1.17.0').aosp().reflowLongStrings()
	}
	spotlessCheck.dependsOn(spotlessApply)
}
